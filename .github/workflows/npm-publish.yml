name: Publish Package to npmjs

on:
  workflow_dispatch: {}
  push:
    tags: ['v*.*.*']

permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Verify NPM_TOKEN exists
        run: |
          if [ -z "${NPM_TOKEN}" ]; then
            echo "NPM_TOKEN is empty or not provided"; exit 1
          fi
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Echo package name & version
        run: |
          node -e "const p=require('./package.json'); console.log('name=',p.name,'version=',p.version)"

      - name: Verify tag matches package.json (if tag run)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG="${GITHUB_REF_NAME#v}"
          PKG_VER=$(node -p "require('./package.json').version")
          if [ "$TAG" != "$PKG_VER" ]; then
            echo "❌ Tag ($TAG) != package.json ($PKG_VER)"; exit 1
          fi

      - name: Skip if version already on npm
        run: |
          PKG=$(node -p "require('./package.json').name")
          VER=$(node -p "require('./package.json').version")
          if npm view "${PKG}@${VER}" version >/dev/null 2>&1; then
            echo "✅ ${PKG}@${VER} already published; skipping."; exit 0
          fi

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org
          always-auth: true

      - name: Auth check
        run: npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - run: npm ci
      - run: npm test --if-present
      - run: npm run build

      - run: npm pack --dry-run

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
